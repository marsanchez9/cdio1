import os
import numpy as np
import rasterio

def load_tiff(tiff_path):
    with rasterio.open(tiff_path) as src:
        arr = src.read(1).astype(np.float32)
        profile = src.profile
    return arr, profile

def calculate_ndwi(green, nir):
    return (green - nir) / (green + nir)

def detect_waterbody(ndwi):
    return (ndwi > 0).astype(np.uint8)  # 1 = water, 0 = land

def save_geotiff(data, profile, path):
    profile = profile.copy()
    profile.update(dtype=rasterio.uint8, count=1, compress='lzw')
    with rasterio.open(path, 'w', **profile) as dst:
        dst.write(data, 1)
    print(f"Waterbody guardat a: {path}")

def process_folder(folder):
    green_path = os.path.join(folder, "green.tif")
    nir_path = os.path.join(folder, "nir.tif")

    if not os.path.isfile(green_path) or not os.path.isfile(nir_path):
        print(f"Falten green.tif o nir.tif a {folder}")
        return

    green, profile = load_tiff(green_path)
    nir, _ = load_tiff(nir_path)

    ndwi = calculate_ndwi(green, nir)
    waterbody = detect_waterbody(ndwi)

    output_path = os.path.join(folder, "waterbody.tif")
    save_geotiff(waterbody, profile, output_path)

if __name__ == "__main__":
    base_folder = "./sentinel2_images4"
    for item in os.listdir(base_folder):
        item_folder = os.path.join(base_folder, item)
        if os.path.isdir(item_folder):
            print(f"Processant {item_folder}...")
            process_folder(item_folder)
